{\n"workspaces":{\n"Adventure":{\n"analyze\sloot":{\n:import\sadventure_lib\n:name\s{package}:analyze\sloot\n\n:global\sstring\sleon.adventure.targetPositions\n\n:local\sstring\squeue\n:local\sstring\sidx\n:local\svector\scurPos\n:local\sstring\stargetPos\n:local\sstring\slootPositions\n\n#setField(index,\svalue)\slss(\"_f\"\s.\s{index},\s{value})\n#getField(index)\slsg(\"_f\"\s.\s{index})\n#setTPos(index,\svalue)\slss(\"_t\"\s.\s{index},\s{value})\n#getTPos(index)\slsg(\"_t\"\s.\s{index})\n\nqueue\s=\s{posToString(x(adventure.playerPos()),\sy(adventure.playerPos()))}\s.\s\"S:\"\n\n;\sOn\sthe\sfirst\sentry\sof\sthis\sloop,\sthe\sjunk\sentry\s\"_f\"\swill\sbe\sset\sto\s\"S\".\n;\sThis\shas\sno\seffect.\n;\sIn\sgeneral,\slootPositions,\squeue\sand\ssetField\sare\sprotected\sso\sthat\sif\sthe\sfield\n;\shas\salready\sbeen\sset,\swe\swon't\stake\saction\sagain.\n\nloop1:\ncurPos\s=\s{firstElementPos}\nidx\s=\ssub\s(queue,\s0,\s4)\nlootPositions\s=\sif\s(\\n{getField(idx)}\s==\s\"\"\\n&&\scontains\s(adventure.entityType(curPos),\s\"Chest\"),\\n{posToString(x(curPos),\sy(curPos))}\s.\s\":\",\\n\"\")\s.\slootPositions\n{setField(if\s({getField(idx)}\s!=\s\"\",\s\"\",\sidx),\s{firstElementDir})}\nqueue\s=\ssub\s(queue,\s6,\s99999)\s.\sif\s({getField(idx)}\s!=\s{firstElementDir},\\n\"\",\\nif\s(\\nadventure.isWall(curPos\s+\svec(0.0,\s1.0))\s||\sy(curPos)\s>=\s18.0,\\n\"\",\\n{posToString(x(curPos),\sy(curPos)\s+\s1.0)}\s.\s\"U:\"\\e)\s.\sif\s(\\nadventure.isWall(curPos\s+\svec(0.0,\s-1.0))\s||\sy(curPos)\s<\s1.0,\\n\"\",\\n{posToString(x(curPos),\sy(curPos)\s-\s1.0)}\s.\s\"D:\"\\e)\s.\sif\s(\\nadventure.isWall(curPos\s+\svec(1.0,\s0.0))\s||\sx(curPos)\s>=\s18.0,\\n\"\",\\n{posToString(x(curPos)\s+\s1.0,\sy(curPos))}\s.\s\"R:\"\\e)\s.\sif\s(\\nadventure.isWall(curPos\s+\svec(-1.0,\s0.0))\s||\sx(curPos)\s<\s1.0,\\n\"\",\\n{posToString(x(curPos)\s-\s1.0,\sy(curPos))}\s.\s\"L:\"\\e)\\e)\ngotoif\s(loop1,\squeue\s!=\s\"\")\n\ncontinue:\nlootPositions\s=\sleon.adventure.targetPositions\s.\slootPositions\n\nloop2:\ntargetPos\s=\ssub\s(lootPositions,\s0,\s4)\ncurPos\s=\s{strToVec(targetPos)}\nlootPositions\s=\ssub\s(lootPositions,\s5,\s99999)\n\ninnerLoop2:\nidx\s=\s{posToString(x(curPos),\sy(curPos))}\nleon.adventure.targetPositions\s=\sif\s(\\n{getField({posToString(\\nx(curPos)\s-\s{nextX({getField(idx)})},\\ny(curPos)\s-\s{nextY({getField(idx)})}\\e)})}\s==\s\"S\"\\n&&\sfalse\s==\scontains\s(leon.adventure.targetPositions,\stargetPos),\\ntargetPos\s.\s\":\"\s.\sleon.adventure.targetPositions,\\nif\s(\\nfalse\s==\scontains\s(leon.adventure.targetPositions,\stargetPos)\\n&&\s{getTPos(idx)}\s!=\s\"\",\\nsub\s(\\nleon.adventure.targetPositions,\\n0,\\nindex(leon.adventure.targetPositions,\s{getTPos(idx)},\s0)\\e)\\n.\stargetPos\s.\s\":\"\\n.\ssub\s(\\nleon.adventure.targetPositions,\\nindex(leon.adventure.targetPositions,\s{getTPos(idx)},\s0),\\n99999\\e),\\nleon.adventure.targetPositions\\e)\\e)\n\n{setTPos(\\nidx,\\nif\s(\\nfalse\s==\scontains\s(leon.adventure.targetPositions,\stargetPos)\\n||\s{getTPos(idx)}\s==\ssub\s(leon.adventure.targetPositions,\sindex(leon.adventure.targetPositions,\stargetPos,\s0)\s+\s5,\s4),\\ntargetPos,\\n{getTPos(idx)}\\e)\\e)}\ncurPos\s-=\s{nextDir({getField(idx)})}\ngoto\s(if\s(\\n{getField({posToString(x(curPos),\sy(curPos))})}\s!=\s\"S\",\\ninnerLoop2,\\nif\s(len(lootPositions)\s>\s0,\sloop2,\send)\\e))\n\nend:\nwait(0.0)\e};\n"clear\sroom":{\n:import\sadventure_lib\n:name\s{package}:clear\sroom\n\n:global\sint\sleon.adventure.maxDifficulty\n:global\sstring\sleon.adventure.path\n:global\sstring\sleon.adventure.targetPositions\n\n:global\sstring\sleon.adventure.room_direction\n:local\sdouble\sdifficulty\n\n#nextRoomLower\sif\s(\\nx(adventure.roomCoords())\s<\s127.0\s&&\sy(adventure.roomCoords())\s>=\s127.0,\\n\"R\",\\nif\s(\\nx(adventure.roomCoords())\s>=\s127.0\s&&\sy(adventure.roomCoords())\s>\s127.0,\\n\"D\",\\nif\s(\\nx(adventure.roomCoords())\s>\s127.0\s&&\sy(adventure.roomCoords())\s<=\s127.0,\\n\"L\",\\n\"U\"\s\\e)\\e)\\e)\n#rotateLeft(x)\ssub\s(\"LDRU\",\sindex(\"ULDR\",\s{x},\s0),\s1)\n#condRotateLeft(cond,\sx)\ssub\s(if\s({cond},\s\"LDRU\",\s\"ULDR\"),\sindex(\"ULDR\",\s{x},\s0),\s1)\n\nexecutesync(\"{package}:farm\skeys\")\n\n;\sWe\scheck\sbased\son\scurrent\sdifficulty\splus\s1,\sbecause\sit's\smore\sefficient\n;\sthat\sway.\n\ndifficulty\s=\s{cur_difficulty(1.0)}\nleon.adventure.room_direction\s=\sif\s(\\ndifficulty\s==\s1.\s&&\sleon.adventure.room_direction\s!=\s\"\",\\n{rotateLeft(leon.adventure.room_direction)},\\n{condRotateLeft({survivable(difficulty)},\s{nextRoomLower})}\\e)\n\nleon.adventure.targetPositions\s=\ssub\s(\\n\"0918\s0009\s1809\s0900\",\\nindex(\"ULRD\",\sleon.adventure.room_direction,\s0),\\n4\\e)\s.\s\":\"\n\nexecutesync(\"{package}:find\sloot\")\nleon.adventure.path\s=\sleon.adventure.room_direction\nexecutesync(\"{package}:follow\spath\")\nend:\nwait(0.0)\e};\n"farm\skeys":{\n:import\sadventure_lib\n:name\s{package}:farm\skeys\n\n:global\sstring\sleon.adventure.path\n:global\sbool\sleon.adventure.running\n:global\sint\sleon.adventure.maxDifficulty\n\n:local\sdouble\sdifficulty\n:local\sbool\sparity\n:local\sbool\sneeds_something\n:local\sbool\sskipped\n\n:local\sstring\sdir\n\n#needs_bombs\sadventure.bombs()\s<\s99\s&&\sdifficulty\s>=\s80.\s&&\sadventure.hasItem(\"leechSword\")\n#needs_health\sadventure.playerHealth()\s<\s99\s&&\sadventure.hasItem(\"leechSword\")\n#needs_mana\sadventure.mana()\s<\s99\s&&\sadventure.hasItem(\"manaReaver\")\s&&\sadventure.hasItem(\"bookSpells\")\n#needs_keys\sadventure.keys()\s<=\s10\n#num_enemies\sround(difficulty\s*\s0.1\s+\s3.0)\n#elite_dmg\sd2i(floor(difficulty\s*\s0.01\s+\s1.0))\s*\s(d2i(ceil(ceil(difficulty\s*\s0.39)\s*\s1.5))\s-\sadventure.playerArmor())\n\ngoto\s(start)\n\nnext:\nparity\s=\sfalse\s==\sparity\nleon.adventure.path\s=\sdir\nexecutesync(\"{package}:follow\spath\")\nstart:\ndifficulty\s=\s{cur_difficulty(0.0)}\nneeds_something\s=\s{survivable(difficulty)}\s&&\s({needs_bombs}\s||\s{needs_health}\s||\s{needs_mana}\s||\s{needs_keys})\ndir\s=\ssub\s(\"XUD\s\sL\s\sR\",\sindex(\"\s918\s90\s09\s189\",\sx(adventure.playerPos())\s.\sy(adventure.playerPos()),\s0),\s1)\nskipped\s=\scontains\s(\"UDLR\",\sdir)\s&&\s(\\n(adventure.countEntities(\"Elite\")\s>\s0)\s!=\s({needs_bombs})\\n&&\s(adventure.countEntities(\"Elite\")\s>\s0\s||\sadventure.playerHealth()\s>\s100\s-\sd2i({num_enemies}\s*\s1.8))\\n||\s(adventure.countEntities(\"Elite\")\s>\s0\s&&\sadventure.playerHealth()\s<=\s{elite_dmg})\\n||\s(parity\s&&\sfalse\s==\sneeds_something)\\e)\nexecutesync(if\s(skipped,\s\"{package}:xNOOPx\",\s\"{package}:kill\senemies\"))\n;\sUpdate\sneeds_something\safter\sclearing\ngoto\s(if\s(\\ncontains\s(\"UDLR\",\sdir)\s&&\sleon.adventure.running\s&&\s(\\nneeds_something\s&&\s({needs_bombs}\s||\s{needs_health}\s||\s{needs_mana}\s||\s{needs_keys})\\n||\sparity\\n||\sskipped\\e),\\nnext,\\nend\\e))\nend:\nwait(0.0)\e};\n"find\sloot":{\n:import\sadventure_lib\n:name\s{package}:find\sloot\n\n:global\sint\sturbo.cycles.max\n:global\sint\sturbo.cycles\n:global\sbool\sleon.adventure.running\n:global\sstring\sleon.adventure.targetPositions\n:global\sint\sleon.adventure.maxDifficulty\n\nkey.u()\nkey.j()\n\nisopen(\"arcade\")\n\nleon.adventure.maxDifficulty\s+=\\nif\s(contains\s(impulse(),\s\"key.j\"),\s-1,\sif\s(contains\s(impulse(),\s\"key.u\"),\s1,\s0))\ngotoif\s(end,\scontains\s(impulse(),\s\"key.\"))\n\nstart:\nturbo.cycles.max\s=\smax(turbo.cycles.max,\sturbo.cycles\s+\s4000)\nexecutesync(\"{package}:analyze\sloot\")\nloop:\nexecutesync(\"{package}:find\spath\")\nexecutesync(\"{package}:follow\spath\")\nleon.adventure.targetPositions\s=\ssub\s(leon.adventure.targetPositions,\s5,\s99999)\ngotoif\s(loop,\slen(leon.adventure.targetPositions)\s>\s0\s&&\sleon.adventure.running)\nend:\nwait(0.0)\e};\n"find\spath":{\n:import\sadventure_lib\n:name\s{package}:find\spath\n\n:global\sstring\sleon.adventure.path\n:global\sstring\sleon.adventure.targetPositions\n:global\sint\sturbo.cycles.max\n:global\sint\sturbo.cycles\n\n:local\svector\scurPos\n:local\sstring\squeue\n:local\sstring\sidx\n:local\sstring\sdir\n:local\sstring\spath\n:local\sbool\scantPhase\n\n#setField(index,\svalue)\slss(\"_f\"\s.\s{index},\s{value})\n#getField(index)\slsg(\"_f\"\s.\s{index})\n\nturbo.cycles.max\s=\smax(turbo.cycles.max,\sturbo.cycles\s+\s4000)\nleon.adventure.path\s=\s\"\"\ncantPhase\s=\sfalse\s==\sadventure.hasItem(\"bootsPhasing\")\\n||\s0\s<\smax(\\nmax(\\nmax(\\nadventure.countEntities(\"Chest\"),\\nadventure.countEntities(\"Enemy\")\\e),\\nadventure.countEntities(\"Elite\")\\e),\\nadventure.countEntities(\"Mimic\")\\e)\nqueue\s=\s{posToString(x(adventure.playerPos()),\sy(adventure.playerPos()))}\s.\s\"S:\"\nloop1:\ncurPos\s=\s{firstElementPos}\nidx\s=\ssub\s(queue,\s0,\s4)\n{setField(if\s({getField(idx)}\s!=\s\"\",\s\"\",\sidx),\s{firstElementDir})}\nqueue\s=\ssub\s(queue,\s6,\s99999)\s.\sif\s({getField(idx)}\s!=\s{firstElementDir},\\n\"\",\\nif\s(\\nadventure.isWall(curPos\s+\svec(0.0,\s1.0))\s&&\scantPhase\\n||\smax(x(curPos),\sy(curPos))\s>=\s18.0\\n||\sx(curPos)\s<\s1.0,\\n\"\",\\n{posToString(x(curPos),\sy(curPos)\s+\s1.0)}\s.\s\"U:\"\\e)\s.\sif\s(\\nadventure.isWall(curPos\s+\svec(0.0,\s-1.0))\s&&\scantPhase\\n||\smin(x(curPos),\sy(curPos))\s<\s1.0\\n||\sx(curPos)\s>=\s18.0,\\n\"\",\\n{posToString(x(curPos),\sy(curPos)\s-\s1.0)}\s.\s\"D:\"\\e)\s.\sif\s(\\nadventure.isWall(curPos\s+\svec(1.0,\s0.0))\s&&\scantPhase\\n||\smax(x(curPos),\sy(curPos))\s>=\s18.0\\n||\sy(curPos)\s<\s1.0,\\n\"\",\\n{posToString(x(curPos)\s+\s1.0,\sy(curPos))}\s.\s\"R:\"\\e)\s.\sif\s(\\nadventure.isWall(curPos\s+\svec(-1.0,\s0.0))\s&&\scantPhase\\n||\smin(x(curPos),\sy(curPos))\s<\s1.0\\n||\sy(curPos)\s>=\s18.0,\\n\"\",\\n{posToString(x(curPos)\s-\s1.0,\sy(curPos))}\s.\s\"L:\"\\e)\\e)\ngoto\s(if\s(\\nqueue\s==\s\"\"\s||\scontains\s(idx,\ssub\s(leon.adventure.targetPositions,\s0,\s4)),\\nl2start,\\nloop1\\e))\n\nloop2:\nleon.adventure.path\s=\sdir\s.\sleon.adventure.path\ncurPos\s-=\s{nextDir(dir)}\nidx\s=\s{posToString(x(curPos),\sy(curPos))}\nl2start:\ndir\s=\s{getField(idx)}\ngotoif\s(loop2,\sdir\s!=\s\"S\")\n\nexecutesync(\"{package}:refine\spath\")\nwait(0.0)\e};\n"follow\spath":{\n:import\sadventure_lib\n:name\s{package}:follow\spath\n\n:global\sstring\sleon.adventure.path\n:global\sbool\sleon.adventure.running\n\n:local\sint\sstepCount\n:local\svector\scurPos\n:local\sbool\swaitChest\n:local\svector\snextMove\n\n#nextDirection\ssub\s(leon.adventure.path,\sstepCount,\s1)\n#nextMove\s{nextDir({nextDirection})}\n#curEntity\sadventure.entityType(curPos\s+\s{nextDir({nextDirection})})\n\ngoto\s(start)\n\nbomb:\nadventure.placeBomb()\ngoto\s(move)\n\nwait:\nadventure.wait()\n\nmove:\nstepCount\s+=\s1\nstart:\ncurPos\s=\sadventure.playerPos()\nnextMove\s=\s{nextMove}\nwaitChest\s=\scontains\s(adventure.entityType(adventure.playerPos()\s+\snextMove),\s\"Chest\")\n\nmove2:\nexecutesync(\"TE2.2:stop\")\nadventure.move(nextMove)\s\s;\sThis\sis\sa\sno-op\sfor\sinvalid\s(0,0)\smoves\nexecutesync(\"TE2.2:start\")\n\nloop:\n\n;\sThis\suses\sthe\sspacing\sof\sunused\svalues\sin\sthe\sindex\sexpression\sto\sbe\sequivalent\n;\sto\slines\sto\sskip\s*backward*.\sThis\sis\smuch\scheaper\sthan\shaving\sa\snested\sternary.\n;\sindex\sreturns\s-1\sfor\sthe\sfallthrough\scase.\s(UDLR\s->\smove)\n\ngoto\s(if\s(\\nstepCount\s<\slen(leon.adventure.path)\s&&\sleon.adventure.running,\\nif\s(\\ncontains\s(\"BW\",\s{nextDirection})\\n||\sx(curPos)\s!=\sx(adventure.playerPos())\\n||\sy(curPos)\s!=\sy(adventure.playerPos())\\n||\swaitChest\s&&\sadventure.entityType(adventure.playerPos()\s+\snextMove)\s==\s\"\",\\n(move\s-\s1)\s-\sindex(\"W\sB\",\s{nextDirection},\s0),\\nmove2\\e),\\nend\\e))\n\nend:\nwait(0.0)\e};\n"init":{\n:import\sadventure_lib\n:name\s{package}:init\n\n:global\sdouble\sleon.adventure.delay\n:global\sstring\sleon.adventure.path\n:global\sbool\sleon.adventure.running\n:global\sint\sleon.adventure.maxDifficulty\n:global\sstring\sleon.adventure.targetPositions\n:global\sstring\sleon.adventure.room_direction\n:local\sint\smaxDifficultyInit\n\nkey.r()\nkey.i()\n\nisopen(\"arcade\")\n\nmaxDifficultyInit\s=\s81\nleon.adventure.maxDifficulty\s=\sif\s(\\ncontains\s(impulse(),\s\"key.i\")\s||\sleon.adventure.maxDifficulty\s==\s0,\\nmaxDifficultyInit,\\nleon.adventure.maxDifficulty\\e)\n\ngoto\s(if\s(\\ncontains\s(impulse(),\s\"key.i\"),\\nend,\\nif\s(leon.adventure.running,\sstop,\sstart)\\e))\nstart:\nexecutesync(\"TE2.2:start\")\ngis(\"<size=0>leon.adventure\",0)\nleon.adventure.running\s=\strue\nleon.adventure.path\s=\s\"\"\nleon.adventure.targetPositions\s=\s\"\"\nleon.adventure.room_direction\s=\s\"\"\ngss(\"---Stop\shiding---\",\s\"</size=0>\")\nloop:\nexecutesync(\"{package}:clear\sroom\")\nleon.adventure.maxDifficulty\s=\sleon.adventure.maxDifficulty\s+\sif\s(\\n{cur_difficulty(0.0)}\s>=\si2d(leon.adventure.maxDifficulty)\\n&&\sadventure.isCompleted(adventure.roomCoords()),\\n2,\\n0\\e)\ngotoif\s(loop,\sleon.adventure.running)\nexecutesync(\"TE2.2:stop\")\nstop:\nleon.adventure.running\s=\sfalse\nend:\nwait(0.0)\e};\n"kill\senemies":{\n:import\sadventure_lib\n:name\s{package}:kill\senemies\n\n#enemyInDir(x,\sy)\sadventure.isEnemy(adventure.playerPos()\s+\svec({x},{y}))\n#enemyDirection\sif\s({enemyInDir(0.0,\s1.0)},\svec(0.0,\s1.0),\\nif\s({enemyInDir(1.0,\s0.0)},\svec(1.0,\s0.0),\\nif\s({enemyInDir(0.0,\s-1.0)},\svec(0.0,\s-1.0),\\nif\s({enemyInDir(-1.0,\s0.0)},\svec(-1.0,\s0.0),\svec(0.0,\s0.0)))))\n#anyEnemies\s{enemyInDir(0.0,\s1.0)}\s||\s{enemyInDir(0.0,\s-1.0)}\s||\s{enemyInDir(1.0,\s0.0)}\s||\s{enemyInDir(-1.0,\s0.0)}\n\nkey.k()\n\nisopen(\"arcade\")\n\ngoto\s(if\s(contains\s(impulse(),\s\"key.\"),\sturbostart,\sloop))\nwait:\nadventure.wait()\n\nattack:\nexecutesync(\"TE2.2:stop\")\nadventure.move({enemyDirection})\n\nturbostart:\nexecutesync(\"TE2.2:start\")\n\nloop:\ngoto\s(if\s(\\n{anyEnemies},\\nattack,\\nif\s(\\nmax(max(adventure.countEntities(\"Enemy\"),\sadventure.countEntities(\"Elite\")),\sadventure.countEntities(\"Mimic\"))\s>\s0,\\nwait,\\nif\s(contains\s(impulse(),\s\"key.\"),\sstop,\send)\\e)\\e))\nstop:\nexecutesync(\"TE2.2:stop\")\nend:\nwait(0.0)\e};\n"refine\spath":{\n:import\sadventure_lib\n:name\s{package}:refine\spath\n\n:global\sstring\sleon.adventure.path\n\n:local\svector\scurPos\n:local\sint\sstepCount\n\n#curDirection\ssub\s(leon.adventure.path,\sstepCount,\s1)\n#insert(st,i,val)\ssub\s({st},0,{i})\s.\s({val})\s.\ssub\s({st},{i},99999)\n#escapeDirection\sif\s(\\nadventure.entityType(curPos\s+\svec(0.0,\s1.0))\s==\s\"\"\\n&&\sadventure.entityType(curPos\s+\svec(0.0,\s2.0))\s==\s\"\"\\n&&\sfalse\s==\sadventure.isWall(curPos\s+\svec(0.0,\s1.0))\\n&&\sy(curPos)\s<\s17.0,\\n\"BUUWDD\",\\nif\s(\\nadventure.entityType(curPos\s+\svec(0.0,\s-1.0))\s==\s\"\"\\n&&\sadventure.entityType(curPos\s+\svec(0.0,\s-2.0))\s==\s\"\"\\n&&\sfalse\s==\sadventure.isWall(curPos\s+\svec(0.0,\s-1.0))\\n&&\sy(curPos)\s>\s1.0,\\n\"BDDWUU\",\\nif\s(\\nadventure.entityType(curPos\s+\svec(-1.0,\s0.0))\s==\s\"\"\\n&&\sadventure.entityType(curPos\s+\svec(-2.0,\s0.0))\s==\s\"\"\\n&&\sfalse\s==\sadventure.isWall(curPos\s+\svec(-1.0,\s0.0))\\n&&\sx(curPos)\s>\s1.0,\\n\"BLLWRR\",\\n\"BRRWLL\"\\e)\\e)\\e)\n\ncurPos\s=\sadventure.playerPos()\ngoto\s(start)\n\nrock:\nleon.adventure.path\s=\s{insert(\\nleon.adventure.path,\\nstepCount,\\nif\s(adventure.hasItem(\"eodArmor\"),\s\"BWWW\",\s{escapeDirection})\\e)}\nstepCount\s+=\sif\s(adventure.hasItem(\"eodArmor\"),\s4,\s6)\n\nnextTile:\ncurPos\s+=\s{nextDir({curDirection})}\nstepCount\s+=\s1\n\nstart:\ngoto\s(if\s(\\nstepCount\s>=\slen(leon.adventure.path),\\nend,\\nif\s(\\nadventure.entityType(curPos\s+\s{nextDir({curDirection})})\s!=\s\"Rock\"\s||\sadventure.hasItem(\"hammer\"),\\nnextTile,\\nrock\\e)\\e))\nend:\nwait(0.0)\e};\n"adventure_lib":{\n#package\sAdventure\sv3.2\n\n#strToVec(str)\svec(s2d(sub\s({str},\s0,\s2),\s-1.0),\ss2d(sub\s({str},\s2,\s2),\s-1.0))\n#posToString(x,\sy)\ssub\s(d2s(({x})\s+\s200.0),\s1,\s2)\s.\ssub\s(d2s(({y})\s+\s200.0),\s1,\s2)\n#firstElementPos\s{strToVec(queue)}\n#firstElementDir\ssub\s(queue,\s4,\s1)\n#cur_difficulty(offset)\s(max(254.\s-\sx(adventure.roomCoords()),\sx(adventure.roomCoords()))\s+\smax(254.\s-\sy(adventure.roomCoords()),\sy(adventure.roomCoords()))\s+\s({offset}\s-\s254.0))\n#survivable(difficulty)\s(\\nceil(i2d(adventure.playerAttack())\s*\sif\s(adventure.hasItem(\"impaler\"),\s1.1,\s1.0))\s>=\\nround({difficulty}\s*\s0.38\s+\s1.0)\s+\sround({difficulty}\s*\s0.08)\\n||\si2d(adventure.playerArmor())\s>=\sceil({difficulty}\s*\s0.39)\\e)\s&&\si2d(leon.adventure.maxDifficulty)\s>=\s{difficulty}\\n&&\s(adventure.hasItem(\"lantern\")\s||\s{difficulty}\s<\s100.0)\n#nextX(d)\ss2d(sub\s(\"X\s0\s0\s1-1\",\sindex(\"\sU\sD\sR\sL\",\s{d},\s0),\s2),\s0.0)\n#nextY(d)\ss2d(sub\s(\"X\s1-1\s0\s0\",\sindex(\"\sU\sD\sR\sL\",\s{d},\s0),\s2),\s0.0)\n#nextDir(d)\svec({nextX({d})},\s{nextY({d})})\e};};};}